name: Test

on:
  workflow_call:
    secrets:
      COMPOSER_AUTH_JSON:
        required: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'develop' }}
    env:
      APP_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'develop' }}
      DB_DATABASE: laravel_testing
      DB_USER: root
      DB_PASSWORD: root

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: npm

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('**/composer.lock') }}

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: dependencies-node-${{ hashFiles('**/package-lock.json') }}

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: posix, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - name: Add HTTP basic auth credentials
        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

      - name: Validate Composer
        run: composer validate

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --no-scripts

      - name: Copy testing environment config file
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Copy example environment config file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate Laravel encryption key
        run: php artisan key:generate

      - name: Prepare Frontend Assets
        run: npm ci && npm run prod

      - name: Run Tests
        run: ./vendor/bin/pest
        env:
          APP_ENV: testing
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Logs
          path: ./storage/logs

      - name: Remove auth.json file
        run: rm -f $GITHUB_WORKSPACE/auth.json
